
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from events import Ui_MainWindow
import events
import fee_payment
import library_dashboard
import students_dashboard
import register_student
import register_class
import dialog
import sys
from models import Classroom,session
class Ui_MainWindow(QMainWindow,object):
    def students_books(self):
        import library_dashboard
        self.window = QtWidgets.QMainWindow()
        self.ui = library_dashboard.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def edit_student(self):
        import edit_students
        self.window = QtWidgets.QMainWindow()
        self.ui = edit_students.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def class_teachers(self):
        import class_teacher_data
        self.window = QtWidgets.QMainWindow()
        self.ui = class_teacher_data.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def reg_classteacher(self):
        import register_classteacher
        self.window = QtWidgets.QMainWindow()
        self.ui = register_classteacher.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()


    def teachers_dashboard(self):
        import teachers_dashboard
        self.window = QtWidgets.QMainWindow()
        self.ui = teachers_dashboard.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def fee_data(self):
        import fees_dashboard
        self.window = QtWidgets.QMainWindow()
        self.ui = fees_dashboard.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def library_lend(self):
        import student_library
        self.window = QtWidgets.QMainWindow()
        self.ui = student_library.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def exit(self):
        sys.exit()
    def check_books(self):
        import library_books
        self.window = QtWidgets.QMainWindow()
        self.ui = library_books.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def register_book(self):
        import register_library
        self.window = QtWidgets.QMainWindow()
        self.ui = register_library.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def parents_dashboard(self):
        import parents_dashboard
        self.window = QtWidgets.QMainWindow()
        self.ui = parents_dashboard.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def view_subjects(self):
        Dialog = QtWidgets.QDialog()
        ui_dialog = dialog.Ui_Dialog()
        ui_dialog.win_title='Subjects Available'
        ui_dialog.title_=f'SUBJECTS: '
        ui_dialog.message_head = f"Mathematics , English , Kiswahili , Geography , History and government , CRE , Physics , Chemistry , Biology , Music , Homescience , Computer science , Business Studies , Agriulture. "
        ui_dialog.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()  
    def register_teacher(self):
        import register_teacher
        self.window = QtWidgets.QMainWindow()
        self.ui = register_teacher.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def classes_available(self):
        classes = session.query(Classroom).all()
        Dialog = QtWidgets.QDialog()
        ui_dialog = dialog.Ui_Dialog()
        ui_dialog.win_title='Classes Available'
        ui_dialog.title_=f'Classes in database: '
        ui_dialog.message_head = f"{classes}"
        ui_dialog.setupUi(Dialog)
        Dialog.show()
        Dialog.exec_()  
    def register_class(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = register_class.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def new_data(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = register_student.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def events(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = events.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
    def fees(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = fee_payment.Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        
    def library(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = library_dashboard.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()
    def dashboard(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = students_dashboard.Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()

    def setupUi(self, MainWindow):
        from models import events
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(2080, 1100)
        MainWindow.setMinimumSize(QtCore.QSize(1900, 1000))
        font = QtGui.QFont()
        font.setPointSize(14)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("imgs/660921-84.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color:#033E3E;\n"
"color: rgb(255, 255, 255);\n"
"selection-color: rgb(255, 0, 127);\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(690, 60, 731, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setPointSize(28)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("")
        self.label.setObjectName("label")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 210, 841, 521))
        self.groupBox.setObjectName("groupBox")
        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox)
        self.textBrowser.setGeometry(QtCore.QRect(10, 30, 801, 161))
        self.textBrowser.setObjectName("textBrowser")
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_2.setGeometry(QtCore.QRect(20, 220, 801, 281))
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 300, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("font: 75 14pt \"MS Shell Dlg 2\";")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(10, 60, 501, 61))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";")
        self.label_4.setObjectName("label_4")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.groupBox_2)
        self.textBrowser_2.setGeometry(QtCore.QRect(20, 120, 721, 141))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(1000, 200, 711, 471))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("imgs/LOGO.jpg"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(50, 770, 311, 111))
        self.pushButton.setStyleSheet("background-color: rgb(255, 85, 0);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(500, 770, 241, 111))
        self.pushButton_2.setStyleSheet("background-color: rgb(85, 170, 0);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(870, 770, 241, 111))
        self.pushButton_3.setStyleSheet("background-color: rgb(85, 85, 127);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(1260, 770, 271, 101))
        self.pushButton_4.setStyleSheet("background-color: rgb(0, 85, 255);")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(1660, 770, 241, 101))
        self.pushButton_5.setStyleSheet("background-color: rgb(255, 0, 127);")
        self.pushButton_5.setObjectName("pushButton_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 2080, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuNew = QtWidgets.QMenu(self.menuFile)
        self.menuNew.setObjectName("menuNew")
        self.menuEdit = QtWidgets.QMenu(self.menuFile)
        self.menuEdit.setObjectName("menuEdit")
        self.menuSettings = QtWidgets.QMenu(self.menuFile)
        self.menuSettings.setObjectName("menuSettings")
        self.menuStudents = QtWidgets.QMenu(self.menubar)
        self.menuStudents.setObjectName("menuStudents")
        self.menuTeachers = QtWidgets.QMenu(self.menubar)
        self.menuTeachers.setObjectName("menuTeachers")
        self.menuFees = QtWidgets.QMenu(self.menubar)
        self.menuFees.setObjectName("menuFees")
        self.menuLibrary = QtWidgets.QMenu(self.menubar)
        self.menuLibrary.setObjectName("menuLibrary")
        self.menuParents = QtWidgets.QMenu(self.menubar)
        self.menuParents.setObjectName("menuParents")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionStudent = QtWidgets.QAction(MainWindow)
        self.actionStudent.setObjectName("actionStudent")
        self.actionTeacher = QtWidgets.QAction(MainWindow)
        self.actionTeacher.setObjectName("actionTeacher")
        self.actionClassroom = QtWidgets.QAction(MainWindow)
        self.actionClassroom.setObjectName("actionClassroom")
        self.actionSubjects = QtWidgets.QAction(MainWindow)
        self.actionSubjects.setObjectName("actionSubjects")
        self.actionStudent_2 = QtWidgets.QAction(MainWindow)
        self.actionStudent_2.setObjectName("actionStudent_2")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionDatabase = QtWidgets.QAction(MainWindow)
        self.actionDatabase.setObjectName("actionDatabase")
        self.actionClasses = QtWidgets.QAction(MainWindow)
        self.actionClasses.setObjectName("actionClasses")
        self.actionClass_Teachers = QtWidgets.QAction(MainWindow)
        self.actionClass_Teachers.triggered.connect(self.reg_classteacher)
        self.actionClass_Teachers.setObjectName("actionClass_Teachers")
        self.actionData = QtWidgets.QAction(MainWindow)
        self.actionData.setObjectName("actionData")
        self.actionClass_Teacher = QtWidgets.QAction(MainWindow)
        self.actionClass_Teachers.triggered.connect(self.class_teachers)
        self.actionClass_Teacher.setObjectName("actionClass_Teacher")
        self.actionSubject_Teachers = QtWidgets.QAction(MainWindow)
        self.actionSubject_Teachers.setObjectName("actionSubject_Teachers")
        self.actionCheck_Database = QtWidgets.QAction(MainWindow)
        self.actionCheck_Database.setObjectName("actionCheck_Database")
        self.actionRecord_Payments = QtWidgets.QAction(MainWindow)
        self.actionRecord_Payments.setObjectName("actionRecord_Payments")
        self.actionPrint_receipts = QtWidgets.QAction(MainWindow)
        self.actionPrint_receipts.setObjectName("actionPrint_receipts")
        self.actionRegister_students = QtWidgets.QAction(MainWindow)
        self.actionRegister_students.setObjectName("actionRegister_students")
        self.actionIndex_numbers = QtWidgets.QAction(MainWindow)
        self.actionIndex_numbers.setObjectName("actionIndex_numbers")
        self.actionContacts = QtWidgets.QAction(MainWindow)
        self.actionContacts.setObjectName("actionContacts")
        self.actionNotification = QtWidgets.QAction(MainWindow)
        self.actionNotification.setObjectName("actionNotification")
        self.actionContacts_2 = QtWidgets.QAction(MainWindow)
        self.actionContacts_2.setObjectName("actionContacts_2")
        self.actionClass = QtWidgets.QAction(MainWindow)
        self.actionClass.setObjectName("actionClass")
        self.actionSend_sms = QtWidgets.QAction(MainWindow)
        self.actionSend_sms.setObjectName("actionSend_sms")
        self.actionSend_email = QtWidgets.QAction(MainWindow)
        self.actionSend_email.setObjectName("actionSend_email")
        self.actionLend_Book = QtWidgets.QAction(MainWindow)
        self.actionLend_Book.setObjectName("actionLend_Book")
        self.actionClear_book = QtWidgets.QAction(MainWindow)
        self.actionClear_book.setObjectName("actionClear_book")
        self.actionCheck_Books = QtWidgets.QAction(MainWindow)
        self.actionCheck_Books.setObjectName("actionCheck_Books")
        self.actionStudent_books = QtWidgets.QAction(MainWindow)
        self.actionStudent_books.setObjectName("actionStudent_Books")
        self.actionRegister_Book = QtWidgets.QAction(MainWindow)
        self.actionRegister_Book.setObjectName("actionRegister_Book")
        self.menuNew.addAction(self.actionStudent)
        self.actionStudent.triggered.connect(self.new_data)
        self.menuNew.addAction(self.actionTeacher)
        self.actionTeacher.triggered.connect(self.register_teacher)
        self.menuNew.addAction(self.actionClassroom)
        self.actionClassroom.triggered.connect(self.register_class)
        self.menuNew.addAction(self.actionSubjects)
        self.actionSubjects.triggered.connect(self.view_subjects)
        self.menuEdit.addAction(self.actionStudent_2)
        self.actionStudent_2.triggered.connect(self.edit_student)
        
        self.menuFile.addAction(self.menuNew.menuAction())
        self.menuFile.addAction(self.menuEdit.menuAction())
        self.menuFile.addAction(self.menuSettings.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.actionExit.triggered.connect(self.exit)
        self.menuStudents.addAction(self.actionDatabase)
        self.actionDatabase.triggered.connect(self.dashboard)
        self.menuStudents.addAction(self.actionClasses)
        self.actionClasses.triggered.connect(self.classes_available)
        self.menuStudents.addAction(self.actionClass_Teachers)
        self.actionClass_Teachers.triggered.connect(self.reg_classteacher)
        self.menuTeachers.addAction(self.actionData)
        self.actionData.triggered.connect(self.teachers_dashboard) 
        self.menuTeachers.addAction(self.actionClass_Teacher)
        self.actionClass_Teacher.triggered.connect(self.class_teachers)
        self.menuTeachers.addAction(self.actionSubject_Teachers)
        self.actionData.triggered.connect(self.teachers_dashboard)
        self.menuFees.addAction(self.actionCheck_Database)
        self.actionCheck_Database.triggered.connect(self.fee_data)
        self.menuFees.addAction(self.actionRecord_Payments)
        self.actionRecord_Payments.triggered.connect(self.fees)
        self.menuFees.addAction(self.actionPrint_receipts)
        self.actionPrint_receipts.triggered.connect(self.fees)
        self.menuLibrary.addAction(self.actionLend_Book)
        self.actionLend_Book.triggered.connect(self.library_lend)
        self.menuLibrary.addAction(self.actionClear_book)
        self.actionClear_book.triggered.connect(self.library_lend)
        self.menuLibrary.addAction(self.actionCheck_Books)
        self.actionCheck_Books.triggered.connect(self.check_books)
        self.menuLibrary.addAction(self.actionStudent_books)
        self.actionStudent_books.triggered.connect(self.students_books)
        self.menuLibrary.addAction(self.actionRegister_Book)
        self.actionRegister_Book.triggered.connect(self.register_book)
        self.menuParents.addAction(self.actionNotification)
        self.menuParents.addAction(self.actionContacts_2)
        self.actionContacts_2.triggered.connect(self.parents_dashboard)
        #To be deleted

        event_ = session.query(events).filter_by(id=1).first()
        if event_:
            self.label_3.setText( f"Title: {event_.title}")
            self.label_4.setText( f"Due date: {event_.dueDate}")
            self.textBrowser_2.setHtml("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
f"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">{event_.info}</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p></body></html>")
        else:
            self.label_3.setText( f"Title: No event")
            self.label_4.setText( f"Due date: No event")
            self.textBrowser_2.setHtml("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
f"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">No current events</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p></body></html>")
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuStudents.menuAction())
        self.menubar.addAction(self.menuTeachers.menuAction())
        self.menubar.addAction(self.menuFees.menuAction())
        self.menubar.addAction(self.menuLibrary.menuAction())
        self.menubar.addAction(self.menuParents.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Students Cosmos"))
        self.label.setText(_translate("MainWindow", "STUDENT\'S COSMOS"))
        self.groupBox.setTitle(_translate("MainWindow", "About"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt; font-style:italic;\">Welcome to students cosmos, a software developed by </span><span style=\" font-size:11pt; font-weight:600; font-style:italic;\">ONESMUS BETT COMPANIES. </span><span style=\" font-size:11pt; font-style:italic;\"> This software is ment to help schools with their huge chunk of data and help the manage them. This software has most of the features schools require and are user friendly. Hope you like the software. Send Feedback at </span><a href=\"http://onesmusbett.com\"><span style=\" font-size:11pt; font-style:italic; text-decoration: underline; color:#0000ff;\">onesmus bett webpage</span></a></p></body></html>"))
        self.groupBox_2.setTitle(_translate("MainWindow", "On going events"))
        
        
        self.pushButton.setText(_translate("MainWindow", "NEW DATA"))
        self.pushButton.clicked.connect(self.new_data)
        self.pushButton_2.setText(_translate("MainWindow", "DASHBOARD"))
        self.pushButton_2.clicked.connect(self.dashboard)
        self.pushButton_3.setText(_translate("MainWindow", "EVENTS"))
        self.pushButton_3.clicked.connect(self.events)
        self.pushButton_4.setText(_translate("MainWindow", "FEES"))
        self.pushButton_4.clicked.connect(self.fees)
        self.pushButton_5.setText(_translate("MainWindow", "LIBRARY"))
        self.pushButton_5.clicked.connect(self.library)
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuNew.setTitle(_translate("MainWindow", "New"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuStudents.setTitle(_translate("MainWindow", "Students"))
        self.menuTeachers.setTitle(_translate("MainWindow", "Teachers"))
        self.menuFees.setTitle(_translate("MainWindow", "Fees"))
        self.menuLibrary.setTitle(_translate("MainWindow", "Library"))
        self.menuParents.setTitle(_translate("MainWindow", "Parents"))
        self.actionStudent.setText(_translate("MainWindow", "Student"))
        self.actionTeacher.setText(_translate("MainWindow", "Teacher"))
        self.actionClassroom.setText(_translate("MainWindow", "Classroom"))
        self.actionSubjects.setText(_translate("MainWindow", "Subjects"))
        self.actionStudent_2.setText(_translate("MainWindow", "Student"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionDatabase.setText(_translate("MainWindow", "Database"))
        self.actionClasses.setText(_translate("MainWindow", "Classes"))
        self.actionClass_Teachers.setText(_translate("MainWindow", "Register Class Teachers"))
        self.actionData.setText(_translate("MainWindow", "Data"))
        self.actionClass_Teacher.setText(_translate("MainWindow", "Class Teachers Data"))
        self.actionSubject_Teachers.setText(_translate("MainWindow", "Subject Teachers"))
        self.actionCheck_Database.setText(_translate("MainWindow", "Check Database"))
        self.actionRecord_Payments.setText(_translate("MainWindow", "Record Payments"))
        self.actionPrint_receipts.setText(_translate("MainWindow", "Print receipts"))
        self.actionRegister_students.setText(_translate("MainWindow", "Register students"))
        self.actionIndex_numbers.setText(_translate("MainWindow", "Index numbers"))
        self.actionContacts.setText(_translate("MainWindow", "Contacts"))
        self.actionNotification.setText(_translate("MainWindow", "Notification"))
        self.actionContacts_2.setText(_translate("MainWindow", "All Parents"))
        self.actionLend_Book.setText(_translate("MainWindow", "Lend Book"))
        self.actionClear_book.setText(_translate("MainWindow", "Clear book"))
        self.actionCheck_Books.setText(_translate("MainWindow", "Check Books"))
        self.actionStudent_books.setText(_translate("MainWindow", "Student Books"))
        self.actionRegister_Book.setText(_translate("MainWindow", "Register Book"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
