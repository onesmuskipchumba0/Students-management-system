# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fees_payment.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from models import session,fee_payed,Fees,Students
import dialog
from PyQt5.QtWidgets import QApplication, QMainWindow
class Ui_MainWindow(QMainWindow,object):
    def submit_(self):
        
        if self.full_name.text() == '' or self.adm_no.text() == '' or self.amount.text() == '':
                        Dialog = QtWidgets.QDialog()
                        ui_dialog = dialog.Ui_Dialog()
                        ui_dialog.win_title = 'Message'
                        ui_dialog.title_="Error"
                        ui_dialog.message_head=f"Values cannot be null"
                        ui_dialog.setupUi(Dialog)
                        Dialog.show() 
                        Dialog.exec_()
        else:
                b = session.query(Fees).filter_by(id=1).first()
                s = session.query(fee_payed).filter_by(adm=int(self.adm_no.text())).first()
                if not s:
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Message'
                                ui_dialog.title_="Error"
                                ui_dialog.message_head=f"No student with such information"
                                ui_dialog.setupUi(Dialog)
                                Dialog.show() 
                                Dialog.exec_()  
                elif s.bal < (b.total_term1+b.total_term2+b.total_term3):
                        bal = s.bal
                        new_bal = bal-int(self.amount.text())
                        data = fee_payed(name=self.full_name.text().upper(),adm=int(self.adm_no.text()),bal=new_bal,amount=int(self.amount.text()))
                        session.add(data)
                        s.bal = new_bal
                        session.commit()
                        Dialog = QtWidgets.QDialog()
                        ui_dialog = dialog.Ui_Dialog()
                        ui_dialog.win_title = 'Message'
                        ui_dialog.title_="Successt"
                        ui_dialog.message_head=f"The information was delivered successfully. Print the reciept"
                        ui_dialog.setupUi(Dialog)
                elif s.bal == 0:
                        Dialog = QtWidgets.QDialog()
                        ui_dialog = dialog.Ui_Dialog()
                        ui_dialog.win_title = 'Message'
                        ui_dialog.title_="Successt"
                        ui_dialog.message_head=f"This Student has already cleared the fees for the year."
                        ui_dialog.setupUi(Dialog)
                elif s.bal == (b.total_term1+b.total_term2+b.total_term3):
                        student = session.query(Students).filter_by(index_no=int(self.adm_no.text())).first()
                        if student:
                                fees = session.query(Fees).filter_by(id=1).first()
                                term_1 = fees.total_term1
                                term_2 = fees.total_term2
                                term_3 = fees.total_term3
                                total = term_3+term_1+term_2
                                amount = int(self.amount.text())
                                balance = total-amount
                                data = fee_payed(name=self.full_name.text().upper(),adm=int(self.adm_no.text()),bal=balance,amount=int(self.amount.text())) 
                                session.add(data)
                                session.commit()
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Message'
                                ui_dialog.title_="Success"
                                ui_dialog.message_head=f"The information was stored successfully. Print the reciept"
                                ui_dialog.setupUi(Dialog)
                                Dialog.show() 
                                Dialog.exec_()   
                else:
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Message'
                                ui_dialog.title_="Error"
                                ui_dialog.message_head=f"No student with such information"
                                ui_dialog.setupUi(Dialog)
                                Dialog.show() 
                                Dialog.exec_()   
                        
    def balance_(self):
        if self.adm_no.text() == '':
                        Dialog = QtWidgets.QDialog()
                        ui_dialog = dialog.Ui_Dialog()
                        ui_dialog.win_title = 'Message'
                        ui_dialog.title_="Error"
                        ui_dialog.message_head=f"Admission number Value cannot be null"
                        ui_dialog.setupUi(Dialog)
                        Dialog.show() 
                        Dialog.exec_()
        else:
                student = session.query(Students).filter_by(index_no=int(self.adm_no.text())).first()
                if student:
                        balance_in_database = session.query(fee_payed).filter_by(adm=student.index_no).order_by(fee_payed.id.desc()).first()
                        if balance_in_database.bal >= 0:
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Message'
                                ui_dialog.title_="Balance Request"
                                ui_dialog.message_head=f"The following data is for {student.full_name}"
                                ui_dialog.info = "Balance : "
                                ui_dialog.info_2 = balance_in_database.bal
                                ui_dialog.setupUi(Dialog)
                                Dialog.show() 
                                Dialog.exec_()
                        elif balance_in_database.bal == 0:
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Message'
                                ui_dialog.title_="Balance Request"
                                ui_dialog.message_head=f"The following data is for {student.full_name}"
                                ui_dialog.more_info_1 = f"Adm no : {student.index_no}"
                                ui_dialog.info = "Balance : "
                                ui_dialog.info_2 = "Cleared"
                                ui_dialog.setupUi(Dialog)
                                Dialog.show() 
                                Dialog.exec_()
                        elif not student:
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Error'
                                ui_dialog.title_="Invalid"
                                ui_dialog.message_head=f"No student with such information"
                                ui_dialog.setupUi(Dialog)
    def reciept_(self):
        if self.full_name.text() == '' or self.adm_no.text() == '' or self.amount.text() == '':
                        Dialog = QtWidgets.QDialog()
                        ui_dialog = dialog.Ui_Dialog()
                        ui_dialog.win_title = 'Message'
                        ui_dialog.title_="Error"
                        ui_dialog.message_head=f"Values cannot be null"
                        ui_dialog.setupUi(Dialog)
                        Dialog.show() 
                        Dialog.exec_()
        else:
                student = session.query(Students).filter_by(index_no=int(self.adm_no.text())).first()
                fee_info = session.query(fee_payed).filter_by(adm=int(self.adm_no.text())).order_by(fee_payed.id.desc()).first()
                if student and fee_info:
                        from fpdf import FPDF
                        pdf=FPDF()
                        #title
                        import datetime
                        pdf.add_page()
                        pdf.set_font("Arial",size=18)
                        pdf.cell(200,10,txt="MINISTRY OF EDUCATION",ln=True,align='C')
                        pdf.cell(200,10,txt="RECEIPT FOR FEE PAYMENT",ln=True,align='C')
                        pdf.ln(10)
                        #Information
                        pdf.set_font("Arial",size=12)
                        pdf.cell(0,10,f'Received from:                  {student.full_name}',0,1)
                        pdf.cell(0,10,f'Students Adm:                   {student.index_no}',0,1)
                        pdf.cell(0,10,f'Class:                                  {student.classroom}',0,1)
                        pdf.cell(0,10,f'Date:                                   {datetime.datetime.now().date()}',0,1)
                        pdf.cell(0,10,f'Amount:                                         {self.amount.text()}',0,1)
                        pdf.cell(0,10,f'------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,'Being payment of :-',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'Tuition Account:                             ',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'L.T & T:                             ',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'Boarding/Lunch programme:                             {self.amount.text()}',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'E.W & C:                             ',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'R.M.I:                             ',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'Administration costs:                             ',0,1)
                        pdf.cell(0,10,f'-------------------------------------------------------------------------------------',0,1)
                        pdf.cell(0,10,f'Total:                                                   Ksh: {self.amount.text()}',0,1)
                        pdf.cell(0,10,f'Balance:                                              Ksh: {fee_info.bal}',0,1)
                        pdf.output("reciept.pdf")
                        import webbrowser
                        webbrowser.open('reciept.pdf')
                else:
                                Dialog = QtWidgets.QDialog()
                                ui_dialog = dialog.Ui_Dialog()
                                ui_dialog.win_title = 'Error'
                                ui_dialog.title_="Invalid"
                                ui_dialog.message_head=f"No student with admission number {self.adm_no.text()} in database"
                                ui_dialog.setupUi(Dialog)
                                Dialog.show() 
                                Dialog.exec_()
    def cancel_(self):
        sys.exit(Ui_MainWindow)
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 1000)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 1000))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 1000))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("imgs/660921-84.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, -10, 1021, 961))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("imgs/pexels-christian-heitz-842711.jpg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(260, 40, 481, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setPointSize(22)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("font: 87 22pt \"Segoe UI Black\";\n"
"color: rgb(255, 255, 255);")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(50, 140, 191, 31))
        self.label_3.setStyleSheet("color: rgb(255, 255, 0);\n"
"font: 87 12pt \"Segoe UI Black\";")
        self.label_3.setObjectName("label_3")
        self.full_name = QtWidgets.QLineEdit(self.centralwidget)
        self.full_name.setGeometry(QtCore.QRect(50, 190, 711, 71))
        self.full_name.setStyleSheet("font: 20pt \"Segoe MDL2 Assets\";")
        self.full_name.setObjectName("full_name")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(50, 280, 511, 31))
        self.label_4.setStyleSheet("color: rgb(255, 255, 0);\n"
"font: 87 12pt \"Segoe UI Black\";")
        self.label_4.setObjectName("label_4")
        self.adm_no = QtWidgets.QLineEdit(self.centralwidget)
        self.adm_no.setGeometry(QtCore.QRect(50, 350, 711, 71))
        self.adm_no.setStyleSheet("font: 20pt \"Segoe MDL2 Assets\";")
        self.adm_no.setObjectName("adm_no")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(50, 450, 411, 31))
        self.label_5.setStyleSheet("color: rgb(255, 255, 0);\n"
"font: 87 12pt \"Segoe UI Black\";")
        self.label_5.setObjectName("label_5")
        self.amount = QtWidgets.QLineEdit(self.centralwidget)
        self.amount.setGeometry(QtCore.QRect(50, 500, 711, 71))
        self.amount.setStyleSheet("font: 20pt \"Segoe MDL2 Assets\";")
        self.amount.setText("")
        self.amount.setObjectName("amount")
        self.submit = QtWidgets.QPushButton(self.centralwidget)
        self.submit.setGeometry(QtCore.QRect(50, 670, 271, 51))
        self.submit.setStyleSheet("background-color: rgb(255, 85, 0);\n"
"color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";")
        self.submit.setObjectName("submit")
        self.submit.clicked.connect(self.submit_)
        self.cancel = QtWidgets.QPushButton(self.centralwidget)
        self.cancel.setGeometry(QtCore.QRect(510, 760, 271, 51))
        self.cancel.setStyleSheet("background-color: rgb(255, 0, 0);\n"
"color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";")
        self.cancel.setObjectName("cancel")
        self.cancel.clicked.connect(MainWindow.close)
        self.balance = QtWidgets.QPushButton(self.centralwidget)
        self.balance.setGeometry(QtCore.QRect(50, 760, 271, 51))
        self.balance.setStyleSheet("background-color: rgb(255, 85, 0);\n"
"color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";")
        self.balance.setObjectName("balance")
        self.balance.clicked.connect(self.balance_)
        self.reciept = QtWidgets.QPushButton(self.centralwidget)
        self.reciept.setGeometry(QtCore.QRect(510, 670, 271, 51))
        self.reciept.setStyleSheet("background-color: rgb(255, 85, 0);\n"
"color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";")
        self.reciept.setObjectName("reciept")
        self.reciept.clicked.connect(self.reciept_)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Register Student"))
        self.label_2.setText(_translate("MainWindow", "RECORD FEES "))
        self.label_3.setText(_translate("MainWindow", "Full Name:"))
        self.label_4.setText(_translate("MainWindow", "Admission number:"))
        self.label_5.setText(_translate("MainWindow", "Amount payed:"))
        self.submit.setText(_translate("MainWindow", "Record"))
        self.cancel.setText(_translate("MainWindow", "Cancel"))
        self.balance.setText(_translate("MainWindow", "View Balance"))
        self.reciept.setText(_translate("MainWindow", "Print Reciept"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
